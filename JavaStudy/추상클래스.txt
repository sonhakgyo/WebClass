
🎁. 추상 메서드 : 추상 메서드는 선언부만 정의하고 구체적인 내용은 비워놓은 메서드
✔. 주의할 점 :
추상 메서드가 있는 클래스를 상속받는 자식클래스는 반드시 부모 클래스의 추상 메서드를 구현해야 한다. 왜냐하면 추상 메서드를 만드는 이유는 '부모 클래스에서는 굳이 만들 필요가 없을 것 같다'는 메서드를 '자식에서 구현하면 좋겠다'라고 해서 부모 클래스에서의 메서드는 비워놓고 걔를 상속받는 자식 클래스가 구현하도록 비워놓는다.
✔. 구현 방법 :
<구조>
    abstract 리턴타입 메서드명();
    구현하지 않으므로 {}(body) 생략하고 ; 으로 마무리한다. 



🎁.추상클래스 : 추상 메서드를 멤버(필드)로 갖는 클래스

✔.주의할 점 :
- 추상 클래스는 일반 메서드 필드에 존재가 가능하다.
- 단, 추상 메서드를 하나라도 포함해야 한다.
- 객체를 생성할 수 없다!

✔.구현 방법 : 
<구조>
    abstract class 클래스명{
      -
      abstract 리턴타입 메서드명();
    }
    구현하지 않으므로 {} 생략하고 ; 으로 마무리한다.

✔.추상 클래스의 사용목적 : 
구현은 자식 클래스가 하도록 메서드의 기능을 비워놓고 싶을 때 사용한다.
예시 : 
    도형 class - draw() : 그리다            // 부모
    사각형 class - draw() : 사각형을 그리다  // 자식
    원 class - draw() : 원을 그리다
    선 class - draw() : 선을 그리다

✔.추상 클래스 사용 시 주의할 점 :
1. 자식 클래스에서 추상 메서드를 구현하지 않으면 오류!
    abstract class Aclass {   // 부모 클래스 Aclass
      abstract void f1();
    }
    class B extends Aclass {  // 자식 클래스 B
                             ← B 클래스는 Aclass의 f1() 무조건 메서드를 구현해야 한다!
    }

2. 일반 메서드와 함께 사용 가능하다. 추상 메서드는 abstract 키워드를 붙인다.
    abstract class Aclass { 
      void f1() {
        System.out.println("f1()");
      }
      abstract void f2(); 
    }



