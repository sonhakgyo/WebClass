리다이렉트와 포워드

페이지 이동은 로직과 뷰의 철저한 분업을 위함이다.

페이지 이동 2가지 방법 {redirect, forward}
        [리다이렉트] 
            - 브라우저가 다른 페이지로 request를 재실행한다.
            - 파라미터를 전달하지 않는다.
            - 주소창에 최종 도착 페이지가 보인다.
            - 외부 URL을 요청 가능하다(구글, 네이버 등으로 이동 가능).

        리다이렉트 방법 2가지
            1) JSP의 response 내장객체 사용
                <% 
                    response.sendRedirect("이동할 페이지"); // 스트링 타입
                %>

            2) 자바스크립트 사용
                <script type = "text/javascript">
                    location.href = '이동할 페이지'; // href: 하이퍼텍스트레퍼런스
                </script>
    
                <script>
                    document.location.href = '이동할 페이지'; // href: 하이퍼텍스트레퍼런스
                </script>
        
        [포워드]
            - 서버측에서 이동할 페이지를 불러와 클라이언트에게 보여준다.
            - 처음 페이지와 도착 페이지, 두 페이지 간에 request와 response를 공유한다(파라미터를 전달).
            - 주소창에 최종 도착 페이지가 보이지 않는다(처음 페이지 주소가 보인다).
            - 동일한 웹 컨테이너 내의 페이지 이동만 가능하다(구글, 네이버 등으로 이동 불가능).

        포워드 방법 3가지
            1) JSP의 pageContext 내장객체 사용
                <%
                    request.setAttribute("user_tel", "010-1111-2222"); // 속성 값 전달
                    pageContext.forward("이동할 페이지");
                %>
            
            2) forward 액션태그 사용(액션태그는 짝꿍 태그가 있다.)
                <jsp:forward page = "이동할 페이지">
                </jsp:forward>

                <jsp:forward page = "이동할 페이지">
                    <jsp:param name = "user_age" value = "25"> // 이렇게도 속성 값을 전달할 수 있다.
                </jsp:forward>


            3) request 내장객체의 RequestDispatcher 객체 사용 
                <%
                    request.setAttribute("user_tel", "010-1111-2222"); // 속성 값 전달
                    RequestDispatcher rd = request.getRequestDispatcher("이동할 페이지");
                    rd.forward(request, response);
                %>        
    











