JSP란?
프론트엔드는 앞단, 백엔드는 뒷단이다. JSP는 백엔드다.
JSP: Java Server Page란?
        HTML 문서 안에서 자바 코드를 삽입하는 기술(Java in HTML)
        HTML 문서를 자바를 통해 동적으로 생성할 수 있다.

WWW(World Wide Web)란?
        네트워크를 통해 정보를 공유할 수 있는 범세계적 정보 검색 시스템

HTTP(Hypertext Transfer Protocol)란?
        WWW 상에서 정보를 주고 받을 수 있는 통신규약
        CLient-Server 간의 요청/응답방식의 통신규약
        HMTL문서를 주고 받으면서 통신하고 포트 번호는 80번을 사용

URI: Uniform Resource Identifer란?
        인터넷에 있는 자원을 나타내는 유일한 주소
        하위 개념으로 URL과 URN이 있다.

    URL: Uniform Resouce Locator란?
            네트워크 상에서 자원이 어디 있는지를 알려주기 위한 규약
            인터넷 프로토콜과 함께 사용
            형식: 프로토콜://호스트명+주소

    URN: 주로 소규모 네트워크에서 사용한다.

Web Server란?
        웹 페이지가 들어있는 파일을 사용자들에게 제공하는 프로그램
        웹 서비스를 하려면 웹 서버프로그램을 설치해야 한다.

Client란? (=browser)
        서버가 제공하는 웹 페이지, 자원 등을 사용하는 사용자측

-----------------------------------------------------------------------------------

2강 데이터베이스와 SQL이란?

DB: DATABASE란?
        체계화된 데이터의 집합체
        대규모 데이터의 공유와 효과적인 운영을 위한 저장소

    장점:
        데이터 중복 최소화
        데이터 공유 => 데이터를 공동으로 관리할 수 있다.
        일관성, 무결성, 보안성 유지
        
DBMS

Oracle SQL의 특징
        대소문자를 가리지 않는다.
        문자열 표기는 외(홑)따옴표를 사용한다.
        이름을 지을 때 띄어쓰기 대신 _을 사용한다(작명 규칙).
        모든(ALL)이라는 의미로 *을 사용한다.

---------------------------------------------------------------------------------

3강 시스템(ORACLE DBMS) 관리자의 주요 명령
    로그인: CONNECT 아이디/비밀번호;
        예: CONNECT SYSTEM/ORACLE;
        예: CONNECT / AS SYSDBA;
        참고: CONNECT는 CONN으로 줄여써도 된다.

    계정 확인: SHOW USER;
    계정 생성: CREATE USER 계정명 IDENTIFIED BY 비밀번호;
           예: CREATE USER MY_USER IDENTIFED BY 1234;
    계정 삭제: DROP USER 아이디 CASCADE;
    계정 권한 부여: GRANT 권한종류 TO 계정명;
               예: GRANT DBA TO MY_USER;
    모든 DBA의 계정, 비밀번호 조회: SELECT USERNAME FROM DBA_USERS;
    특정 계정의 비밀번호 변경: ALTER USER 계정명 IDENTIFED BY 비밀번호;

커맨드라인의 단축키
        명령 복사하기    : 드래그 후 우클릭 복사
        명령 붙여넣기    : 복사 후 커서 놓고 우클릭 붙여넣기
        이전 명령 재실행 : 화살표 위, 아래
        화면 지우기      : CL SCR; == (CLEAR SCREEN)
        명령 히스토리    : F7

----------------------------------------------------------------------------------------

4강 DBA의 주요 명령
    
DBA(DATABASE ADMINISTRATOR)란? 
        데이터베이스 관리자, 데이터베이스를 실질적으로 관리할 수 있는 권한이다.
        자신이 소유한 데이터베이스를 생성, 조회, 삭제, 수정할 수 있다.

TABLE이란? 
        행과 열로 구성된 데이터의 집합이다.

자주 사용되는 데이터베이스에서의 자료형:
        NUMBER: 정수와 실수 모두 표현 가능
        NUMBER(p): 최대 p자리수까지 표현하는 수(p: 1~38)
            예: NUMBER(3) ---> 최대 세자리수
        CHAR(n): 문자열(n: 바이트 크기, 최대 2000byte)
        VARCHAR2(n): 가변문자열(n: 바이트 크기, 최대 4000byte)
            VARIABLE CHARACTER, 가변문자열 = 알아서 크기가 줄어든다.
        DATE: 날짜 형식 문자열

테이블 제약조건(CONSTRAINT): 필요에 의해 컬럼 선언부에 추가로 지정하는 사항 
        NOT NULL: 필수입력
        UNIQUE: 유일값이어야 한다(다른 레코드가 중복된 값을 가지면 안 된다).
        PRIMARY KEY: 기본키(레코드를 식별하는 대표값)
            NOT NULL+UNIQUE의 형태, 하나의 레코드가 여러개의 기본키를 가질 수는 없다.
        DEFAULT[값]: 이 항목을 누락할 경우의 기본값 설정
        CHECK(범위): 이 범위 안에서의 데이터만 저장 가능하다.

DBA 관리자 명령
        테이블 컬럼 확인(형태 확인): DESC 테이블명;
        테이블 삭제: DROP TABLE 테이블명;
        테이블 컬럼 추가: ALTER TABLE 테이블명 ADD(컬럼명 자료형);
        테이블 컬럼 자료형 수정: ALTER TABLE 테이블명 MODIFY (컬럼명 NEW자료형);
        테이블 컬럼 이름 수정: ALTER TABLE 테이블명 RENAME COLUMN 원래의 컬럼명 TO 새 컬럼명;
        테이블 컬럼 삭제: ALTER TABLE 테이블명 DROP COLUMN 컬럼명;



-



JSP
        썬마이크로시스템즈사에서 만든 자바 서블릿 기반의 서버측(백엔드) 스크립트 기술
특징
        - "자바 빈즈"라고 하는 자바 컴포넌트를 사용할 수 있다.
        - JSP나 다른 서블릿 간의 쉬운 데이터를 공유한다.
                ** page, request, session, application scope로 구현한다.
        - 자바의 모든 기능을 사용할 수 있다. 무한한 확장성
        - IBM, 오라클, 썬, BEA 등에서 강력히 지원한다.
        - JSTL(JSP Standard Tag Library)과 같은 다양한 기능의 태그 라이브러리를 사용할 수 있다.
        - 다양한 운영체제와 여러 회사의 JSP 개발/실행 환경을 이용할 수 있다.


Servlet(서블릿)이란?
        · 서블릿은 JSP 표준이 나오기 전에 만들어진 표준으로 자바로 웹어플리케이션을 개발할 수 있도록 
          하기 위해 만들어졌다.
        · 서브릿을 이용하면 자바 클래스를 이용해서 웹어플리케이션을 개발할 수 있다.
        · 반드시 매핑을 해야 한다.
        · 동적 웹어플리케이션 컴포넌트이다(JSP와 동일하다).
        · 확장자는 JAVA이다.
        · 클라이언트의 요청에 동적으로 작동하고, 응답은 HTML을 이용한다.
        · 자바 스레드를 이용하여 동작한다.
        · 스레드 풀을 이용하면 서버의 부하를 줄일 수 있다.
        · MVC 패턴에서 Controller로 이용된다.

JSP 구성요소 
        1. <%@ 내용 %> : 지시어(directive)
                - page    : 이 JSP 페이지에 대한 설정 정보
                  <%@ page 설정할 내용 %>
                        · language : 스크립트 언어 유형(JSP는 Java만), 기본값 Java
                                page language = "java"
                        · import : import 할 외부 클래스 지정
                                page import = "java.util.Date"
                        · session : 세션의 사용 유무 지정, 기본값 true
                                page session = "true"
                        · buffer : 버퍼 크기 지정, 기본값 8KB
                                page buffer = "8kb"
                        · autoFlush : 버퍼의 자동 flush 여부, 기본값 true
                                page autoFlush = "false"
                        · isThreadSafe : 멀티 스레드 방지 여부, 기본값 true
                                page isThreadSafe = "false"
                        · info : 이 JSP 페이지에 대한 설명
                                page info = "Test file"
                        · errorPage : 현재 페이지에서 오류가 났을 경우 호출할 페이지      
                                page errorPage = "index.jsp"
                        · isErrorPage : 오류를 처리하는 페이지인지 여부, 기본값 false
                                page isErrorPage = "true"
                        · contentType : 이 페이지에 대한 MIME TYPE
                                page contentType = "text/html"
                        · pageEncoding : 이 페이지에 대한 인코딩 타입
                                page pageEncoding = "UTF-8"
                        · extends : 이 페이지 클래스에 대한 슈퍼클래스

                - include : 다른 JSP 페이지를 이 페이지에 포함한다.
                  <%@ include file = "포함할 페이지" %>
                - taglib  : 이 JSP 페이지가 사용할 사용자 정의 태그를 선언한다. JSTL에서 사용한다.
                  <%@ taglib 사용자정의태그 선언 %>

        2. <%! 내용 %> : 선언부(declaration), 해당 JSP가 변환될 클래스의 필드, 메서드를 선언할 때 사용한다.
                <%! 
                        public void test() {
                                System.out.print("test log");
                        }
                %>

        3. <% 내용 %> : 스크립트릿(scriptlet), JSP 페이지 내부에 자바 코드 삽입
                <% 
                        int a = 10;
                        out.write(a + 100);
                %>

        4. <%= 내용 %> : 표현식(expression), html 문서에 "결과값(변수, 리턴값이 있는 메서드)"을 출력할 때
                <%= a %>
                <%= a + 20 %>
                <%= sum(10, 20) %>

        5. <%-- 내용 --%> : 주석(comment), JSP 페이지 상에서의 주석(단, <% %> 안에서는 // 혹 /* */ 사용한다.)


WAS(Web Application Server)
WAS의 종류 : tomcat, jeus, Web Logic, Webspere, JBOSS, Oracle 등
        Web Server 웹 서버
                - HTTP로 받은 요청을 container에 전달
                - 정적 처리만 가능하다.
                - 웹 서버의 종류 : IIS, apache, tMax, WebtoB 등
        Web container
                - 웹 서버에서 전달받은 요청을 동적으로 처리한다.
                - JSP, Servlet 실행 환경을 제공한다.

        

파라미터 Parameter 
        - 클라이언트가 서버에게 전달하는 데이터
        - '이름 - 값' 쌍의 형태(= map 구조)
        - 서버 측에서는 전달받은 파라미터를 해당 파라미터의 '이름'을 통해 실제 '값'을 얻어오는 형식이다.
        - 문자열만 처리 가능하다.

파라미터 전달 방법
        <form> 태그 안에 전달할 파라미터를 나열한다.
                <form action = "파라미터를 전달할 페이지" method = "전송방식">
                        <input type = "형식" name = "파라미터명" value = "기본값">
                        <textarea name = "파라미터명"> 기본값 </textarea>
                        <select name = "파라미터명">
                                <option value = "값1"> 보여줄 텍스트1 </option>
                                <option value = "값2"> 보여줄 텍스트2 </option>
                                <option value = "값3"> 보여줄 텍스트3 </option>
                        </select>
                        <input type = "hidden" name = "파라미터명" value = "값">
                </form>

파라미터를 받는 방법
        - (자바) String requst.getParameter(String 파라미터명) : 파라미터명을 가진 파라미터의 값을 반환한다.
        - 스크립트릿이나 표현식을 사용한다.

파라미터 관련 메서드
        - request.getParameter("파라미터명") : 파라미터값을 얻는다. 
          리턴자료형 String
        - request.getParameterValues("파라미터명") : 파라미터 값들을 얻는다. 
          리턴자료형 String[]
        - request.getParameterMap() : 전달된 모든 파라미터를 얻는다. 
          리턴자료형 Map
                key   : 파라미터명(자료형 : String)
                value : 파라미터값(자료형 : String[])
        - request.getParameterNames() : 전달된 모든 파라미터들의 이름을 얻는다. 
          리턴자료형 Enumeration
