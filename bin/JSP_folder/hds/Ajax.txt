Ajax(Asynchronous Javascript and XML)
        빠르게 동작하는 동적인 웹 페이지를 만들기 위한 개발 기법이다.
        Ajax는 웹 페이지 전체를 다시 로딩하지 않고도 웹 페이지 일부분만을 갱신할 수 있다.
        백그라운드 영역에서 서버와 통신하여 그 결과를 웹 페이지의 일부분에만 표시할 수 있다.
        이때 아래와 같은 데이터를 주고 받을 수 있다.
         - JSON
         - XML
         - HTML
         - 텍스트 파일

    Ajax 장점
        1. 웹 페이지 전체를 다시 로딩하지 않고도 웹 페이지의 일부분만을 갱신할 수 있다.
        2. 웹 페이지가 로드된 후에 서버로 데이터 요청을 보내거나 받을 수 있다.
        3. 다양한 UI(동적 페이지) 구현이 가능해진다.

    Ajax 단점
        1. 페이지 이동이 없기 때문에 히스토리 관리가 안 된다.
        2. 반복적인 데이터를 요청하면 느려지거나 작동하지 않게 된다.
        3. 페이지의 이동이 없다는 것은 보안 상의 문제도 발생할 수 있다는 것이다.

    Ajax 구성 요소
        - 웹 페이지의 표현을 위한 HTML과 CSS
        - 데이터에 접근하거나 화면 구성을 동적으로 조작하기 위해 사용되는 DOM 모델
        - 데이터 교환을 위한 JSON이나 XML
        - 웹 서버와의 비동기 통신을 위한 XMLHttpRequest 객체
        - 위에서 언급한 모든 기술을 결합하여 작업 흐름을 제어하는데 사용되는 자바스크립트 

    XMLHttpRequest 객체 
        var 객체명 = new XMLHttpRequest();

        - AJAX의 가장 핵심적인 구성 요소는 바로 XMLHttpRequest 객체이다.
        - AJAX에서 XMLHttpRequest 객체는 웹 브라우저가 서버와 데이터를 교환할 때 사용된다.
        - 웹 브라우저가 백그라운드에서 계속해서 서버와 통신할 수 있는 것은 바로 이 객체를 사용하기 때문이다.

    서버에 요청하기 
        - AJAX에서는 XMLHttpRequest 객체를 사용하여 서버와 데이터를 교환한다.
        - 따라서 서버에 요청을 보내기 위해서는 객체를 생성해야 하고 객체의 open() 메서드와 send() 메서드를 사용하여 요청을 보낼 수 있다.

        open()
            - 서버로 보낼 AJAX 요청 형식을 설정한다.
            - open(전달방식, URL, 동기 여부);
                    · 전달방식 : GET, POST 등 요청 방식 작성
                    · URL : 요청을 처리할 서버의 파일 주소 전달
                    · 동기 여부 : 요청을 동기식으로 전달할 지 비동기식으로 전달할 지를 선택한다.

            - 실습
                    <script>
                        function sendRequest() {
                            var xhr = XMLHttpRequest();

                            xhr.open("POST", "request_ajax.jsp", true);
                            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                            xhr.send("city=Seoul&zipcode=54645");
                        }
            
        send()
            - 작성된 AJAX 요청을 서버로 전달한다.
            - 전달 방식에 따라서 인수를 가질 수도 또는 가지지 않을 수도 있다.

            GET 방식  : send()
            POST 방식 : send(전송할 데이터의 전달 방식에 맞추어 작성) 
