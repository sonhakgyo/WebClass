💎.Stack
- 원시타입의 데이터(Int, Byte, Boolean, Double 등)의 실제값이 저장(할당)된다.
- Heap 영역에 생성된 Object 타입의 데이터의 참조값이 저장된다.
- 함수가 호출될 때 사용하는 메모리이고, 기능 수행이 끝나면 자동으로 반환되는 메모리

💎.Heap
- Object 타입의 데이터(String, Integer 등)가 저장된다.
- 애플리케이션의 모든 메모리 중에서 Stack을 제외한 부분
- 자동으로 관리되지 않는 메모리 영역이다.
- CPU가 엄격하게 관리하지 않는 메모리 영역이기 때문에 메모리 주소가 발생하는 경우가 있는데 Garbage Collection을 이용해 이러한 문제를 해결한다.
    *메모리 누수를 막기 위한 Garbage Collection

------------------------------------------------------------------------------

.java → .class → Class Loader ↔ (Loading) ↔ Runtime Data Area

🎁. Runtime Data Area 
💎. Method Area : JVM이 시작될 때 생성되는 공간으로 바이트코드가 이 영역에 저장된다.
클래스 정보, 변수 정보, static으로 선언된 변수가 저장되고 모든 스레드가 공유하는 영역

💎. Heap : 동적으로 생성된 객체가 저장되는 영역으로 GC의 대상이 되는 공간이다. new 연산을 통하여 생성된 인스턴스 변수, 클래스의 객체, 배열 등이 있다. 이렇게 생성된 변수는 해당 객체가 소멸되기 전이나 가비지 컬렉터가 정리하기 전까지는 이 영역에 남아있다. 쉽게 소멸되는 데이터가 아니다.

* Method Area와 Heap 영역은 모든 스레드가 공유한다.

💎. Stack : 지역변수나 메서드의 매개변수, 임시적으로 사용되는 변수, 메서드의 정보가 저장되는 영역이다. 지역변수와 매개변수의 특성상 해당 메서드의 호출이 종료되면 이 안의 선언된 변수들은 사라진다. 주로 금방 사라지고 사용이 끝나는 데이터가 저장되는 영역이다.

💎. PC Register : 스레드가 시작될 때 생성되며 현재 수행 중인 jvm의 명령어 주소를 저장하는 공간이다. 그러니까 스레드가 어떤 부분을 어떤 명령어로 수행할지를 저장하는 공간

💎. Native Method Stack : java가 아닌 다른 언어로 작성된 코드를 저장하는(위한) 공간. 즉, JNI(Java Native Interface)를 통해 호출하는 C/C++ 등의 코드를 수행하기 위한 공간,
자바 프로그램이 컴파일되어 생성되는 바이트코드가 아닌 실제 실행할 수 있는 기계어로 작성된 프로그램을 실행시키는 공간이다. 
    *Native Method Interface(JNI) : 
    jvm에 의해 실행되는 코드 중 네이티브로 실행하는 것이 있다면
    해당 네이티브 코드를 호출하거나 호출될 수 있도록 만든 일종의 프레임워크

    *Naitive Method Libraries : 
    네이티브 메서드 실행에 필요한 라이브러리

        Execution Engine
            Interpreter    JIT Compiler    Garbage Collector 
        ↑
        ↓
        Native Method Interface(JNI)
        ↑
        ↓
        Native Method Library

* Type 
        1. Primitive Type
                1-1. boolean 
                1-2. Numeric
                        1-2-1. Integer 
                                    byte 
                                    short
                                    int
                                    long 
                                    char
                        1-2-2. Floating-point
                                    float 
                                    double 
        2. Reference Type
                    class 
                    interface
                    enum
                    Array
        3. null Type 




















