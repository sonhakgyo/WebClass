🎁. 상속(inheritance) : 
    기존에 사용 중인 클래스의 필드를 다른 클래스에서 계속 사용을 해야 한다면 상속을 받는다. 그렇게 되면 부모 클래스의 필드를 마치 자신의 것처럼 사용할 수 있다.

    ※ 상속 시 주의할 점
    1. 상속 시에 생성자는 상속되지 않는다.
    2. 다중상속을 지원하지 않는다.
    3. 클래스 앞 final 키워드는 다른 클래스가 상속 불가능하다.

    A = 부모, 상위, 슈퍼. 기반, 조상 클래스
    B = 자식, 하위, 서브, 파생, 자손 클래스

    💎. 부모 클래스로부터 상속받은 멤버변수의 접근권한이 'PRIVATE'일 때,
    1. 부모 클래스의 생성자를 호출해서 초기화시킬 수 있다.
    2. 부모 클래스에 setter 메소드를 통해서 초기화시킬 수 있다. 
    3. 변수에 저장된 값은 getter 메서드를 통해서 가져온다.

    💎. 부모 클래스로부터 상속받은 멤버변수의 접근권한이 'PROTECTED'일 때,
    1. 자식 클래스에서 접근이 가능하기 때문에 this. 를 사용해서 초기화한다.
    2. 자식 클래스에서 접근이 가능하므로 getter 메서드를 사용하지 않고, 변수명으로 직접 접근하면 된다.

    * 자식 클래스의 생성자가 실행되기 전에 부모 클래스의 생성자가 먼저 실행된다.
    * 실행할 부모 클래스의 생성자를 지정하지 않으면 부모 클래스의 기존 생성자가 자동 실행된다.
    * 자동으로 입력되는 super()를 지우더라도 자바 컴파일러가 자동으로 넣어(만들어)준다.
    * 생성자는 항상 부모가 먼저다.



    🎁. 다형성(polymorphism) : 
    - 다형성이란, 하나의 메서드가 서로 다른 클래스에서 다양하게 실행되는 것을 말한다. 다형성을 구현하기 위해서는 다형성을 구현할 메서드를 포함할 클래스에게 부모 클래스가 상속해줘야 한다.
    - 부모 클래스와 자식 클래스에 같은 이름의 메서드가 있어야 하고, 자식 클래스에서는 재정의(오버라이딩) 해야 한다.
    - 따라서 다형성의 종류에는 '오버로딩'과 '오버라이딩'이 있다.