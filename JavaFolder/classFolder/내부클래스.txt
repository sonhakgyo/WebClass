내부 클래스(inner class)
    클래스 내부에 클래스를 선언하여 외부 클래스의 필드 접근에 용이하기 위함
    내부 클래스의 필드를 사용하기 위해서는 외부 클래스에서 내부 클래스를 객체화해야 한다.

    외부클래스명 객체명 = new 외부클래스생성자();
    외부클래스명.내부클래스명 객체명 = 외부클래스객체명.new 내부클래스 생성자();

내부 클래스를 사용하는 이유 
    01. 캡슐화
    A클래스에서 b라는 작업이 자주 쓰이고, 이 작업은 B클래스를 만들어야 쉽게 관리할 수 있다.
    하지만 다른 클래스에서 b작업이 필요 없거나 B클래스를 외부에 노출시키고 싶지 않을 때 사용한다.
    
    02. 내부 클래스는 GUI 개발 시 많이 사용된다.
    예를 들어 a라는 버튼과 b라는 버튼이 있다고 가정하자. 두 버튼의 기능이 서로 다르다면
    클래스를 별도로 만드는 것보다 내부 클래스로 만들어 사용하는 것이 적합하다.

    더 자세히 얘기하자면 AWT나 Swing과 같은 GUI 애플리케이션에서 사용되며 그 외에서는
    잘 사용하지 않는다. 이 말은 익명 클래스도 포함된다.

일반적인 클래스의 구조                 내부 클래스를 사용한 구조
    class A {                             class A {

    }                                     }

    class B {                             class B {

    }                                     }

내부 클래스의 종류는 변수의 선언 위치에 따른 종류와 같다. 변수의 선언 위치에 따라 인스턴스 변수, 클래스 변수(static 변수), 지역변수로 구분된다.
    
인스턴스 클래스
    외부 클래스의 멤버변수 선언 위치, 외부 클래스의 인스턴스 멤버들과 관련된 작업에 사용될 목적으로 선언
스태틱 클래스 
    외부 클래스의 멤버변수 선언 위치에 선언, static 멤버처럼 다루어지며 static 변수, 
    static 메서드에서 사용될 목적으로 선언
지역 클래스
    외부 클래스의 메서드나 초기화 블록 안에 선언, 선언된 영역 내부에서만 사용
익명 클래스 
    클래스의 선언과 객체의 생성을 동시에 하는 이름없는 클래스(일회용)















