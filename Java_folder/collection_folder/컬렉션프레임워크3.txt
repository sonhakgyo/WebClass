컬렉션 프레임워크
                1. 큐 Queue
                2. 스택 Stack

1. 큐 Queue
    - 한 쪽 끝에서는 삽입이, 다른 쪽에서는 삭제가 일어나는 구조
    - 큐는 인터페이스이므로 사용하려면 '업캐스팅(Upcasting)'이 필요하다.
    - 선입선출(FIFO)의 구조
    - front : 머리, 삭제, 저장된 원소 중에서 첫 번째 원소
    - rear  : 꼬리, 삽입, 저장된 원소 중에서 마지막 원소 

    [큐와 관련된 메서드]
        boolean add(E e)   : 큐에 요소 e 추가
        E element()        : 큐에 제일 상단 요소 반환
        E remove()         : 큐의 최상단 요소를 반환 후 제거

        boolean offer(E e) : 큐에 요소 e를 추가
        E peek()           : 큐에 제일 상단 요소 반환
        E poll()           : 큐의 최상단 요소를 반환 후 제거 

    [큐 사용법]
        1) Queue<Element> queue = new LinkedList<Element>(); - 주로 사용하는 방법이다.
        2) Queue<Element> queue = new Array<Element>();


2. 스택 Stack
    - 스택은 클래스이기 때문에 바로 사용 가능하다.
    - 후입선출(LIFO)의 구조 : 나중에 들어온 데이터가 먼저 나간다.
    - 한 쪽 끝에서 삽입과 삭제가 '모두' 일어나는 구조
    - Vector의 자식 클래스
    - top : 삽입, 삭제

    [스택과 관련된 메서드]
        E peek()             : top 요소를 반환
        E pop()              : top 요소 제거 후 반환
        E push(E item)       : top에 요소 추가
        int search(Object O) : 요소 O가 있는지 검색해서 위치 반환