1. 컬렉션 프레임워크
    - 자바(Java)에서 제공하는 자료구조
    - 데이터를 효율적으로 다루기 위한 클래스들의 집합

    자료구조(Data Structure)
        - 자료들을 저장할 때 효율적인 구조로 저장하는 것(데이터의 구조 : 스택, 큐, 리스트)
        - 스택 : 후입선출(나중에 들어온 데이터가 먼저 나감 예) 엘리베이터 만원)

    컬렉션 프레임워크의 종류
        <Collection 인터페이스를 구현하는 클래스>
            셋 Set
            리스트 List
            큐 Queue
            맵 Map

        # itertor 
            컬렉션 요소에 접근해서 '반복적으로 요소 접근 시' 도움을 주는 객체

        <제공된 메서드>
            add(E e)             : 지정요소(e) 추가
            contains(Object obj) : 객체 obj 존재여부
            isEmpty()            : 컬렉션이 비어있는지 여부
            isIterator()         : 컬렉션의 itertor 반환
            remove(Object obj)   : 객체 obj 제거
            size()               : 요소 개수 반환
    

2. 제네릭(Generic)
    - 클래스가 다룰 객체를 미리 명시하는 기법
    - 의미 : "제네릭 == 일반화" 
    - 예) 택시를 다루던 버스를 다루던 그냥 자동차(일반화)라고 다룬다.
    - 즉, 제네릭은 모든 종류의 타입을 다룰 수 있도록 클래스나 메서드를 타입 매개변수를 이용하여 선언한 기법

    제네릭 사용방법
        - 클래스명 뒤에 <E>, <K>, <V>와 같은 형식으로 사용한다.
        - 단, < > 안에는 구현 시에는 알파벳, 사용 시에는 클래스만 들어갈 수 있다.

    제네릭 사용구간 
        - 제네릭 클래스 : 클래스 뒤에 제네릭 기법 사용
        - 제네릭 메서드 : 메서드 위에 제네릭 기법 사용

    제네릭타입 매개변수(관례적으로 널리 사용되는 타입명은 하나의 대문자 알파벳을 사용한다.)
        E(Element) : 배열이나 집합들의 요소 타입을 지정한다.
        T(Type)    : 변수의 자료형과 같은 타입을 지정한다.
        S, U       : 여러개의 제네릭 기법을 사용할 때 많이 사용한다.
        K(Key)     : 키 타입 지정 시 사용한다.
        V(Value)   : 값 타입 지정 시 사용한다.