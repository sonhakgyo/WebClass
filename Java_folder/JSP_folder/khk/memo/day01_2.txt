[웹 요청,전달 흐름]

웹 어플리케이션의 프로세스
 -> 게시판 / 쇼핑몰 / SNS

클라이언트,사용자,브라우저---요청.request--->서버
서버---응답(response)--->브라우저
	클라이언트로부터 요청을 받으면 서버가 리소스를 클라이언트에게 전달
	전달된 페이지를 브라우저에서 볼수있음

서버가 리소스를 전달할수있게 코딩
Servlet 서블릿==클래스 => 서블릿 컨테이너==톰캣==서버
Java코드인데, 내부에 HTML코드를 작성해볼수있음
가독성 문제발생!
-> JSP : HTML에 Java코드를 삽입 / 가독성 향상됨!
	JSP를 컴파일... Servlet파일이 생성됨

클라이언트 ---요청---> 서버(서블릿 컨테이너.톰캣) -> Servlet파일 ---> 실행
  ---------> 내부의 순수 HTML코드가 추출 ---> 페이지가 전달됨


"네트워크"
	데이터 전달되는 흐름
	문제발생 "지점"에대한 이해
 Protocol 프로토콜 == 네트워크 연결규격.통신 신호체계
	OSI 7계층
	응용 표현 세션 전송 | 네트워크 데이터링크 물리
	직접 구성		| 장치에서 수행되는 부분
	ex) 카톡  암호화,복호화  동기화  TCP vs UDP
	데이터의 목적지 IP주소  물리적 주소  전기신호0111011010...

"인터넷"
	에러발생의 원인
	www웹기반으로한 SNS서비스가 多
	DNS 처리과정
	www.naver.com요청 -->DNS---> 8.8.8.8 ---> PC

"웹"☆
	URL에 대한 이해
	요청,응답에 대한 이해
	http프로토콜을 사용
	GET : 보안취약. 데이터를 전송가능하지만 길이에 제한있음. 정보조회시 사용
	POST : 기본보안은 되어있음. 길이제한xxx. 데이터를 서버로 전송하기위해서 사용
	
서버에 접속해서 서비스를 이용 == 웹 프로그램 == 어플리케이션
HTML - 구조
CSS - 스타일
JS - 상호작용,동작
서버프로그래밍: PHP ASP JSP
로직: C Java










